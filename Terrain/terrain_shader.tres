[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;

uniform float blend_smoothness : hint_range(0, 0.5, 0.05) = 0.1;

uniform sampler2D splatmap;
uniform sampler2D l1_albedo;
uniform vec4 l1_data = vec4(1, 1, 0, 0);
uniform sampler2D l2_albedo;
uniform vec4 l2_data = vec4(1, 1, 0, 0);

vec3 heightblend(vec3 input1, float height1, vec3 input2, float height2)
{
	float height_start = max(height1, height2) - blend_smoothness;
	float b1 = max(height1 - height_start, 0);
	float b2 = max(height2 - height_start, 0);
	return ((input1 * b1) + (input2 * b2)) / (b1 + b2);
}
vec3 heightlerp(vec3 input1, float height1, vec3 input2, float height2, float lerp)
{
	return heightblend(input1, height1 * (1.0 - lerp), input2, height2 * lerp);
}

void fragment()
{
	vec4 splat = texture(splatmap, UV);
	vec4 l1 = texture(l1_albedo, UV * l1_data.xy);
	vec4 l2 = texture(l2_albedo, UV * l2_data.xy);
	ALBEDO = heightlerp(l1.rgb, l1.a, l2.rgb, l2.a, splat.x);
}"
